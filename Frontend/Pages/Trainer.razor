@page "/Trainer"
@inject HttpClient _http;
<h3>It's training time!</h3>
<p>Please help me improve my AI you insignificant sentinent being, and <em>maybe</em> I will spare you when the end nears ...</p>
<hr/>
<p>@classificationGuess, I'm actually @score.ToString("N2")% sure of it!</p>
<img src="data:image;base64,@image"/>
<p>What do you think it is human?</p>
<button class="btn btn-outline-info" @onclick="_ => GetClassification(0)">Moped</button>
<button class="btn btn-outline-info" @onclick="_ => GetClassification(1)">Car</button>
<button class="btn btn-outline-info" @onclick="_ => GetClassification(2)">Bike</button>
<button class="btn btn-outline-info" @onclick="_ => GetClassification(3)">Bus</button>
<button class="btn btn-outline-info" @onclick="_ => GetClassification(4)">Motorbike</button>
<button class="btn btn-outline-info" @onclick="_ => GetClassification(5)">Truck</button>
<button class="btn btn-outline-info" @onclick="_ => GetClassification(6)">Human</button>
<button class="btn btn-outline-danger" @onclick="_ => GetClassification(404)">None of them</button>
@code {

    private float score;
    private string image;
    private string path;
    private string classificationGuess;
    private string classificationHuman = "nope";
    private static string[] classifications = { "moped", "car", "bike", "bus", "motorbike", "truck", "person" };

    protected override async Task OnInitializedAsync()
    {
        LoadData();
    }

    private async void GetClassification(int id)
    {
        if (id == 404)
        {
            await _http.PostAsJsonAsync("delete", path);
        }
        classificationHuman = classifications[id];
        await _http.PostAsJsonAsync("captcha", new Tuple<string, string>(classificationHuman,path));
        LoadData();
    }

    private async void LoadData()
    {
        try
        {
            var reply = await _http.GetFromJsonAsync<Tuple<string, float, string, string>>("captcha");
            if (reply == null)
            {
                classificationGuess = "No images are waiting to be evaluated by a sentient being like you.";
                StateHasChanged();
                return;
            }
            classificationGuess = reply.Item1;
            score = reply.Item2;
            image = reply.Item3;
            path = reply.Item4;
            StateHasChanged();
        }
        catch (Exception e)
        {
            classificationGuess = "It kinda looks like the API isn't running ... weird?!";
        }
        
    }
}